swarm {
  server.base.url = ${SWARM_SERVER_BASE_URL}
  server.base.url ="https://bumblebee.hive.swarm.space"
}

twilio {
  account_sid = ${ACCOUNT_SID}
  account_sid = "ACbe2g4c2824320f89f7d89c7efdt"
  auth_token = ${AUTH_TOKEN}
  auth_token = "be6df5e95741f9879222b0756006bfb4"
}

sendgrid.secret.key = ${SENDGRID_SERCRET_KEY}
sendgrid.secret.key = "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"

jwt.scala.circe {
  key = "xxxxxxx"
  key = ${?SECRET_KEY_JWT}
  expire-duration-sec = 604800000
  expire-duration-sec = ${?EXPIRE_DURATION_SEC}
}

smtp-config {
  server="smtp-mail.outlook.com"
  server=${?SMTP_SERVER_HOST}
  port=587
  port=${?SMTP_POST}
  attachmentFileRoot="/tmp"
}
akka.management {
  cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
    }
  }
}
akka {
  actor {
    provider = cluster
  }

  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    split-brain-resolver {
      active-strategy = "lease-majority"
      lease-majority {
	lease-implementation = "akka.coordination.lease.kubernetes"
      }
    }
    coordinated-shutdown.exit-jvm = on
  }
}
akka.extensions = ["akka.management.cluster.bootstrap.ClusterBootstrap"]
akka.cluster.downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
